// <auto-generated />
using System;
using Airport.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Airport.DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    [Migration("20180714121334_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Airport.DAL.Entities.Aeroplane", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AeroplaneTypeId");

                    b.Property<TimeSpan>("LifeTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AeroplaneTypeId");

                    b.ToTable("Aeroplanes");
                });

            modelBuilder.Entity("Airport.DAL.Entities.AeroplaneType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Carrying");

                    b.Property<string>("Model");

                    b.Property<int>("Places");

                    b.HasKey("Id");

                    b.ToTable("AeroplaneTypes");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Crew", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("PilotId");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Departure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AirplaneId");

                    b.Property<Guid?>("CrewId");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("AirplaneId");

                    b.HasIndex("CrewId");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<string>("DeparturePoint");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("Destinition");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Pilot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("Experience");

                    b.Property<string>("FirstName");

                    b.Property<string>("SecondName");

                    b.HasKey("Id");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Stewardess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<Guid?>("CrewId");

                    b.Property<string>("FirstName");

                    b.Property<string>("SecondName");

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("Stewardesses");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FlightId");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Aeroplane", b =>
                {
                    b.HasOne("Airport.DAL.Entities.AeroplaneType", "AeroplaneType")
                        .WithMany()
                        .HasForeignKey("AeroplaneTypeId");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Crew", b =>
                {
                    b.HasOne("Airport.DAL.Entities.Pilot", "Pilot")
                        .WithMany()
                        .HasForeignKey("PilotId");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Departure", b =>
                {
                    b.HasOne("Airport.DAL.Entities.Aeroplane", "Airplane")
                        .WithMany()
                        .HasForeignKey("AirplaneId");

                    b.HasOne("Airport.DAL.Entities.Crew", "Crew")
                        .WithMany()
                        .HasForeignKey("CrewId");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Stewardess", b =>
                {
                    b.HasOne("Airport.DAL.Entities.Crew")
                        .WithMany("Stewardesses")
                        .HasForeignKey("CrewId");
                });

            modelBuilder.Entity("Airport.DAL.Entities.Ticket", b =>
                {
                    b.HasOne("Airport.DAL.Entities.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId");
                });
#pragma warning restore 612, 618
        }
    }
}
